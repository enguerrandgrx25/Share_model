# import module
import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

import notion_df

from PIL import Image


st.set_page_config(
    page_title="M√©thode Galion for CYNA",
    page_icon="üëã",
)

image = Image.open('cyna.jpg')

st.image(image)

# Title
st.title("M√©thode Galion")

st.error("""Le but de cet exercice est d'aborder des sujets important pour le succ√®s de l'entreprise. Ces sujets ne sont pas forcement facile a aborder mais ils sont primordials""")

ok = st.checkbox("Are you ready / Ok ?")
if ok:

    st.subheader("1 - Concept de d√©part (0 - 30 points)")

    st.info("""On dit souvent avec raison que les id√©es n‚Äôont pas de valeur, seule compte l‚Äôex√©cution.
    Ce n‚Äôest pas enti√®rement vrai. Certaines id√©es sont quand m√™me plus f√©condes que d‚Äôautres
    et surtout certaines id√©es sont mieux √†
    m√™me d‚Äôattirer les bons talents et les capitaux, ce qui est cl√© pour le d√©marrage d‚Äôune startup.
    Ici on donne des points pour le secteur choisi et le concept""")
    st.warning("Ici on donne des points pour le secteur choisi et le concept")


    st.markdown("##")

    g_concept = st.slider('Combien de point attribuons nous au concepts de base ?', 0, 30, 0)

    g_concep_e = 0
    g_concep_a = 0
    g_concep_n = 0

    if(g_concept > 0):
        st.markdown("##")
        st.markdown("##")
        g_concep_a = st.slider('Combien de point attribuons nous √† Alex ?', 0, g_concept, 0)
        g_concep_e = st.slider('Combien de point attribuons nous √† Enguerrand ?', 0, g_concept, 0)
        g_concep_n = st.slider('Combien de point attribuons nous √† Nathan ?', 0, g_concept, 0)

    #st.write("I'm ", age, 'years old')

    st.subheader("2 - Validation du concept (entre 0 et 120 points) ")

    st.info("""Parfois au moment de la formation de la soci√©t√©,
    le concept de d√©part n‚Äôest qu‚Äôune √©bauche sans rien de plus.
    Parfois certains associ√©s ont d√©j√† travaill√© plusieurs semaines ou mois pour r√©unir
    des √©l√©ments donnant de la consistance √† l‚Äôid√©e de d√©part.
    Il peut s‚Äôagir d‚Äôun business plan d√©taill√©,
    d‚Äôune √©tude de march√© aupr√®s de clients potentiels, d‚Äôune maquette technique,
    voire d‚Äôun vrai prototype op√©rationnel.
    Ces √©l√©ments peuvent fournir des m√©triques importantes pour cr√©dibiliser
    le projet et le rendre de fait (m√™me si c‚Äôest en grande partie illusoire) moins risqu√©.
    Cela peut attirer d‚Äôautant plus talents et capitaux et donc a une valeur importante pour le projet.""")

    st.warning("Ici on donne des points pour les elements qui cr√©dibilisent le projet: business plan d√©taill√©,d‚Äôune √©tude de march√© aupr√®s de clients potentiels, d‚Äôune maquette technique,voire d‚Äôun vrai prototype op√©rationnel.")

    st.markdown("##")
    g_val_concept = st.slider('Combien de point attribuons nous √† la validation du concept ?', 0, 120, 0)

    g_val_concept_e = 0
    g_val_concept_a = 0
    g_val_concept_n = 0

    if(g_val_concept > 0):
        st.markdown("##")
        st.markdown("##")
        g_val_concept_e = st.slider('Combien de point attribuons nous √† Enguerrand ?', 0, g_val_concept, 0)
        g_val_concept_a = st.slider('Combien de point attribuons nous √† Alex ?', 0, g_val_concept, 0)
        g_val_concept_n = st.slider('Combien de point attribuons nous √† Nathan ?', 0, g_val_concept, 0)
    #st.write("I'm ", age, 'years old')

    st.subheader("3.1 - R√¥les g√©n√©ralistes (entre 90 et 110 points)")
    st.info("""On attend d‚Äôun fondateur qui a un profil g√©n√©raliste qu‚Äôen fonction des besoins de la startup,
    il puisse faire potentiellement du commercial, de la finance, des op√©rations ou du marketing.

    Il est en effet souvent difficile de figer √† l‚Äôavance quelle sera la contribution exacte des fondateurs g√©n√©ralistes,
    cette capacit√© de traiter des probl√®mes tr√®s diff√©rents √©tant la marque de fabrique des bons entrepreneurs.

    Les besoins g√©n√©ralistes sont sensiblement les m√™mes dans toutes les startups,
    donc la variabilit√© sp√©cifique li√©e au projet est assez limit√© (entre 90 et 110 points).
    """)
    st.warning("Ici on donne des points pour l'importance de la partie Business / G√©n√©rale")

    st.markdown("##")

    g_role_gen = st.slider('Combien de point attribuons nous aux roles G√©n√©raliste ?', 90, 110, 90)

    g_role_gen_e = 0
    g_role_gen_a = 0
    g_role_gen_n = 0

    if(g_role_gen >= 90):
        g_role_gen_a = st.slider('Combien de point attribuons nous √† Alex ?', 0, g_role_gen, 0)
        g_role_gen_e = st.slider('Combien de point attribuons nous √† Enguerrand ?', 0, g_role_gen, 0)
        g_role_gen_n = st.slider('Combien de point attribuons nous √† Nathan ?', 0, g_role_gen, 0)


    st.subheader("3.2 - R√¥les techniques (entre 70 et 130 points)")
    st.info("""Pour la technique par contre, on ne peut pas s‚Äôimproviser dessus et seuls les fondateurs
    qui ont les comp√©tences ad√©quates pourront pr√©tendre contribuer utilement dans ce domaine.
    D‚Äôo√π l‚Äôid√©e de s√©parer d‚Äôun c√¥t√© les fondateurs qui auront principalement une contribution technique
    et de l‚Äôautre les g√©n√©ralistes qui s‚Äôoccuperont du reste.
    Par contre, selon la nature du projet, l‚Äôimpact de la technique sur le succ√®s du projet peut varier
    √©norm√©ment d‚Äôo√π une variabilit√© nettement plus importante (entre 70 et 130 points).
    """)

    st.warning("Ici on donne des points pour l'importance de la partie Technique")

    g_role_tech = st.slider('Combien de point attribuons nous aux roles Tech ?', 70, 130, 70)

    g_role_tech_e = 0
    g_role_tech_a = 0
    g_role_tech_n = 0

    if(g_role_tech >= 70):
        g_role_tech_a = st.slider('Combien de point attribuons nous √† Alex ?', 0, g_role_tech, 0)
        g_role_tech_e = st.slider('Combien de point attribuons nous √† Enguerrand ?', 0, g_role_tech, 0)
        g_role_tech_n = st.slider('Combien de point attribuons nous √† Nathan ?', 0, g_role_tech, 0)



    #st.write("I'm ", age, 'years old')

    st.subheader("4 - Position de CEO (entre 40 et 100 points)")
    st.info("""Une √©quipe qui n‚Äôa pas clarifi√© d√®s le d√©part qui est cens√© trancher en dernier ressort fait fuir les investisseurs.
    Le choix de celui qui sera le CEO de la startup est un √©l√©ment tr√®s structurant du projet. Le CEO est l‚Äôinterlocuteur naturel des investisseurs financiers.
    Ils seront tr√®s sensibles √† son profil et cela p√®sera tr√®s lourd dans leur d√©cision d‚Äôinvestir.
    Outre insuffler la vision et la culture d‚Äôentreprise, les VCs attendent aussi du CEO qu‚Äôil puisse prendre les d√©cisions difficiles,
    notamment celles o√π il y a d√©saccord entre co-fondateurs.

    A noter que dans l‚Äô√©tude Galion, parmi les √©quipes qui ont choisi une r√©partition in√©galitaire,
    dans 80% des cas, le CEO avait plus de capital que les autres.

    Pour toutes ces raisons, l‚Äôimpact particulier du CEO dans la bonne marche du projet justifie un bonus en capital li√© √† ce r√¥le.
    Le montant de ce bonus devra √™tre modul√© selon l‚Äôexp√©rience ant√©rieure du fondateur comme CEO, avec l‚Äôid√©e que cette exp√©rience est cens√©e √™tre un pr√©dicteur de la contribution √† venir.
    De 40 points si c‚Äôest la premi√®re fois qu‚Äôil est dans ce r√¥le, le bonus peut monter jusqu‚Äô√† 100 points pour quelqu‚Äôun qui peut justifier d‚Äôune exp√©rience de CEO longue et r√©ussie dans des contextes tr√®s complexes.""")

    st.warning("Ici on donne des points pour l'experience en tant que CEO de celui qui sera CEO")


    g_ceo = st.slider('Combien de point attribuons nous au role de CEO ?', 40, 100, 40)

    g_ceo_e = 0
    g_ceo_a = 0
    g_ceo_n = 0

    if(g_ceo >= 40):
        g_ceo_a = st.slider('Combien de point attribuons nous √† Alex ?', 0, g_ceo, 0)
        g_ceo_e = st.slider('Combien de point attribuons nous √† Enguerrand ?', 0, g_ceo, 0)
        g_ceo_n = st.slider('Combien de point attribuons nous √† Nathan ?', 0, g_ceo, 0)



    st.subheader("5 - Exp√©rience ant√©rieure pertinente (entre 0 et 100 points)")
    st.info("""R√©ussir √† faire grandir une startup n√©cessite des comp√©tences tr√®s particuli√®res.
    Autrement dit, avoir des exp√©riences r√©ussies dans d‚Äôautres contextes professionnels n‚Äôest pas un bon pr√©dicteur de la r√©ussite dans une startup.

    Par contre, les statistiques montrent que les serial-fondateurs de startup deviennent de plus en plus efficaces au fil de leurs projets (d‚Äôo√π l‚Äôint√©r√™t de commencer jeune sa carri√®re d‚Äôentrepreneur !).
    Les VCs sont tr√®s sensibles √† ce point dans leur d√©cision d‚Äôinvestir.
    En cons√©quence, seule l‚Äôexp√©rience comme fondateur d‚Äôune startup a √©t√© retenue ici. Le montant du bonus d√©pend bien √©videmment de la trajectoire des startups pr√©c√©dentes.
    On peut compter 20 points quelqu‚Äôun qui a r√©ussi √† lever quelques millions d‚Äôeuros, jusqu‚Äô√† 100 points ou plus pour celui qui a conduit une belle licorne jusqu‚Äô√† une sortie r√©ussie.""")

    st.warning("Ici on donne des points pour l'experience en Startup")


    g_exp_fnd = st.slider('Combien de point attribuons nous √† nos experiences ant√©rieurs ?', 0, 100, 0)

    g_exp_fnd_e = 0
    g_exp_fnd_a = 0
    g_exp_fnd_n = 0

    if(g_exp_fnd > 0):
        g_exp_fnd_a = st.slider('Combien de point attribuons nous √† Alex ?', 0, g_exp_fnd, 0)
        g_exp_fnd_e = st.slider('Combien de point attribuons nous √† Enguerrand ?', 0, g_exp_fnd, 0)
        g_exp_fnd_n = st.slider('Combien de point attribuons nous √† Nathan ?', 0, g_exp_fnd, 0)




    st.subheader("6 - Expertise sectorielle (entre 0 et 20 points)")
    st.info("""Pour certains projets, une expertise sectorielle permet d‚Äô√©viter certains t√¢tonnements et de gagner du temps sur les premi√®res it√©rations du projet.
    N√©anmoins, sur le long terme, ce type d‚Äôexpertise sectorielle est souvent surestim√©e,
    car les fondateurs peuvent assez facilement recruter ces experts comme employ√©s ou consultants.
    D‚Äôo√π un bonus assez limit√© pour cet apport.""")

    st.warning("Ici on donne des points pour l'experience dans la Cybersecurit√©")

    g_exp_sec = st.slider('Combien de point attribuons nous √† notre exp sectorielle ?', 0, 20, 0)

    g_exp_sec_e = 0
    g_exp_sec_a = 0
    g_exp_sec_n = 0

    if(g_exp_sec > 0):
        g_exp_sec_a = st.slider('Combien de point attribuons nous √† Alex ?', 0, g_exp_sec, 0)
        g_exp_sec_e = st.slider('Combien de point attribuons nous √† Enguerrand ?', 0, g_exp_sec, 0)
        g_exp_sec_n = st.slider('Combien de point attribuons nous √† Nathan ?', 0, g_exp_sec, 0)


    result = st.checkbox("Pret pour les resultats ?")
    if result:
        st.text("##")
        st.balloons()

        d = {
        "Type d'apport": ["Concept", "Validation du concept", "Roles Tech", "Roles G√©n√©raliste", "Position CEO",
        "Exp fondateurs", "Exp secteur"],
        'Min': [0, 0, 70, 90, 40, 0, 0],
        'Max': [30, 120, 130, 110, 100, 100, 20],
        'Score Alex': [g_concep_a, g_val_concept_a, g_role_tech_a, g_role_gen_a, g_ceo_a, g_exp_fnd_a, g_exp_sec_a],
        'Score Nathan': [g_concep_n, g_val_concept_n, g_role_tech_n, g_role_gen_n, g_ceo_n, g_exp_fnd_n, g_exp_sec_n],
        'Score Enguerrand': [g_concep_e, g_val_concept_e, g_role_tech_e, g_role_gen_e, g_ceo_e, g_exp_fnd_e, g_exp_sec_e]}

        df = pd.DataFrame(data=d)

        # CSS to inject contained in a string
        hide_dataframe_row_index = """
                    <style>
                    .row_heading.level0 {display:none}
                    .blank {display:none}
                    </style>
                    """

        # Inject CSS with Markdown
        st.markdown(hide_dataframe_row_index, unsafe_allow_html=True)

        st.dataframe(df)

        score_a = g_concep_a + g_val_concept_a + g_role_tech_a + g_role_gen_a + g_ceo_a + g_exp_fnd_a + g_exp_sec_a
        score_n = g_concep_n + g_val_concept_n + g_role_tech_n + g_role_gen_n + g_ceo_n + g_exp_fnd_n + g_exp_sec_n
        score_e = g_concep_e + g_val_concept_e + g_role_tech_e + g_role_gen_e + g_ceo_e + g_exp_fnd_e + g_exp_sec_e


        st.subheader("Voici donc la somme des scores par personne: ")
        st.text("Le score d'Alexandre est de: {}".format(score_a))
        st.text("Le score de Nathan est de: {}".format(score_n))
        st.text("Le score d'Enguerrand est de: {}".format(score_e))

        tt_score = score_a + score_n + score_e


        st.subheader("Voici donc la r√©partition propos√© par la methode du Gallion: ")
        st.text("Alexandre: {}".format(round(score_a/tt_score, 2)))
        st.text("Nathan: {}".format(round(score_n/tt_score, 2)))
        st.text("Enguerrand: {}".format(round(score_e/tt_score, 2)))
